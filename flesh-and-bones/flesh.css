/* Table of Contents

-- GENERAL --
0. Simple Reset
1. General styling
    1.1 Typography
    1.2 Links & Buttons
    1.3 Handy Shorthand
2. Images
3. Nav
4. Flexbox
5. Grid

-- Responsive --
M1. Media query syntax
*/


/* 0. SIMPLE RESET */
* {
    padding: 0;
    margin: 0;
    font-size: 100%;
    line-height: 1em;
}

/* 1. GENERAL STYLING */
body {
    width: 100%;
    max-width: 1440px;
    overflow-y: hidden;       
}

/* 1.1 TYPOGRAPHY */
p {
    font-family: "Name", Arial, Helvetica, sans-serif;    
}

/* 1.2 LINKS & BUTOONS */
a {
    text-decoration: none;
    -webkit-transition: all 0.2s ease-in-out;
    transition: all 0.2s ease-in-out;
}

a:hover {
    color: #FF3262;
}

a:visited {
    color: #FF3262;
}

/* 1.3 HANDY SHORTHAND */
a {
    border: 1px solid #000;
    box-shadow: 3px 5px 0px 0px rgba(0,0,0,0.25);
}

/* Position child absolutely relative to parent */
.parent {
    position: relative;
}
.child {
    position: absolute;
}


/* 2. IMAGES */

/* Cropping */
.headline-img {
    width: 50vw;
    height: 100vh;
    /* 50% viewport width, 100% viewport height */
    object-fit: contain;
    object-position: 0% 100%;
    /* works like background image sizing and positioning.
    Let's the browser handle cropping so you can adjust responsively */
}

/* Background images */
.bg-img {
    background-image: url("../img/");
    background-position: right;
    background-repeat: no-repeat;
    background-size: contain;
    height: 100vh;
    width: 100%;
}

/*
.social {
    display: inline;
    text-align: center;
    list-style: none;
}

.social ul li {
    display: inline;
} */

/* 3. NAV */
nav ul li {
    display: inline;
    list-style: none;
}


/* 4. FLEXBOX */
.flex-wrapper {
    display: flex;
    /* inline-flex to display container inline. */
    flex-flow: row wrap;
    /* same as flex-direction: row; flex-wrap: wrap;
    On small screens can switch to flex-direction: column;
    */
    justify-content: space-around;
    /* alignment along the main axis, evenly distributed across the space */
}

.flex-item {
    /* set the order: order: -1; */
    /* Nest flex for additional options by adding display: flex; */
}


/* 5. GRID */

.grid-wrapper {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    /* repeats 1fr column 3 times OR
    grid-template: row values / column values */
    grid-gap: 20px 10px; /* row gap, column gap */
  }
  
  .grid-item {
    /* align - align along the column axis
    justify - aligning along the row axis */
  }

  .grid-item .item1 {
    grid-column: 1/2;
    /* start column grid line 1, end at column grid line 2 */
    grid-row: 1/span 2;
    /* start row grid line 1, span 2 rows */
  }


/* RESPONSIVE */
/* M1. Media query syntax */
@media (max-width: 600px) {
    /* Styles for 600px and down go here.
    
    Suggestions for small screen:
    - Reduce columns
    - Increase the measure (line length/width) closer to the edges
    - Increase font size
    - Consider first line indentation (match to line-height) instead of paragraph spacing
    - Scale and crop images appropriately

    */
}

@media screen and (min-width: 30em) and (orientation: landscape) {
    /* Media query for screens, 30em and up, orientated landscape */
}